const express = require('express');
const { body, validationResult } = require('express-validator');
const nodemailer = require('nodemailer');
const rateLimit = require('express-rate-limit');

const router = express.Router();

// Rate limiting –¥–ª—è —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
const contactLimiter = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
  max: 5, // –º–∞–∫—Å–∏–º—É–º 5 —Å–æ–æ–±—â–µ–Ω–∏–π —Å –æ–¥–Ω–æ–≥–æ IP –∑–∞ 15 –º–∏–Ω—É—Ç
  message: {
    error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
  }
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nodemailer
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.EMAIL_USER || 'your-email@gmail.com',
    pass: process.env.EMAIL_PASS || 'your-app-password' // App Password, –Ω–µ –æ–±—ã—á–Ω—ã–π –ø–∞—Ä–æ–ª—å!
  }
});

// –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
const contactValidation = [
  body('name')
    .trim()
    .isLength({ min: 2, max: 100 })
    .withMessage('–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 2 –¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤'),
  body('email')
    .isEmail()
    .normalizeEmail()
    .withMessage('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å'),
  body('message')
    .trim()
    .isLength({ min: 5, max: 1000 })
    .withMessage('–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 5 –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤')
];

// POST /api/contact - –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
router.post('/', contactLimiter, contactValidation, async (req, res) => {
  try {
    console.log('üì® –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', req.body);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
      console.log('‚ùå –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', errors.array());
      return res.status(400).json({
        error: '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏',
        details: errors.array()
      });
    }

    const { name, email, message } = req.body;

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∏—Å—å–º–∞
    const mailOptions = {
      from: process.env.EMAIL_USER || 'your-email@gmail.com',
      to: 'aborisov@sfedu.ru',
      subject: '–°–∞–π—Ç InterView',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #333; border-bottom: 2px solid #4f46e5; padding-bottom: 10px;">
            –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ InterView
          </h2>
          
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3 style="color: #4f46e5; margin-top: 0;">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ:</h3>
            <p><strong>–ò–º—è:</strong> ${name}</p>
            <p><strong>Email:</strong> ${email}</p>
          </div>
          
          <div style="background-color: #ffffff; padding: 20px; border: 1px solid #e5e7eb; border-radius: 8px;">
            <h3 style="color: #4f46e5; margin-top: 0;">–°–æ–æ–±—â–µ–Ω–∏–µ:</h3>
            <p style="line-height: 1.6; color: #374151;">${message.replace(/\n/g, '<br>')}</p>
          </div>
          
          <div style="margin-top: 20px; padding: 15px; background-color: #f3f4f6; border-radius: 8px; font-size: 12px; color: #6b7280;">
            <p>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ InterView (http://localhost:3000)</p>
            <p>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${new Date().toLocaleString('ru-RU')}</p>
          </div>
        </div>
      `,
      text: `
–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ InterView

–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ:
–ò–º—è: ${name}
Email: ${email}

–°–æ–æ–±—â–µ–Ω–∏–µ:
${message}

---
–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ InterView (http://localhost:3000)
–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${new Date().toLocaleString('ru-RU')}
      `
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    const info = await transporter.sendMail(mailOptions);
    
    console.log(`‚úÖ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç ${name} (${email}) –Ω–∞ aborisov@sfedu.ru`);
    console.log(`üìß –¢–µ–º–∞: –°–∞–π—Ç InterView`);
    console.log(`üìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}`);
    console.log(`üîó Message ID: ${info.messageId}`);

    res.json({
      success: true,
      message: '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞:', error);
    
    res.status(500).json({
      error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è',
      message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.'
    });
  }
});

// GET /api/contact - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º—ã
router.get('/', (req, res) => {
  res.json({
    status: 'OK',
    message: '–§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –¥–æ—Å—Ç—É–ø–Ω–∞',
    email: 'aborisov@sfedu.ru'
  });
});

module.exports = router;
